import streamlit as st
import pyautogui
from sql_execute import farm_tb_insert,farm_tb_select
from calculate import timestamp
st.set_page_config(
    page_title="‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏õ‡∏•‡∏á",
    page_icon="‚õ∫",
)

def main():
    st.title("‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏õ‡∏•‡∏á‚õ∫")
    with st.sidebar:
        col1, col2, col3 = st.columns(3)
        col1.metric("Temperature", "70 ¬∞F", "1.2 ¬∞F")
        col2.metric("Wind", "9 mph", "-8%")
        col3.metric("Humidity", "86%", "4%")
    select_page_tab, create_page_tab, update_page_tab = st.tabs(["üìñ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"])
    with select_page_tab:
        select_page();
    with create_page_tab:
        create_page();
    with update_page_tab:
        update_page();

def create_page():
    with st.form("farm_form",clear_on_submit=True):
        st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà")
        created_at = timestamp()
        updated_at = created_at
        col_left, col_right = st.columns([1,1])
        with col_left:
            vil_no = st.text_input(label="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏π‡πà", max_chars=2)
            subdistrict_name = st.text_input(label="‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡∏ö‡∏•")
            province_name = st.text_input(label="‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î")
        with col_right:
            vil_name = st.text_input(label="‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô")
            district_name = st.text_input(label="‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≥‡πÄ‡∏†‡∏≠")
        st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥")
        col_left,col_center,col_right = st.columns([1,1,1])
        with col_left:
            geo_x = st.text_input(label="‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÅ‡∏Å‡∏ô X")
        with col_center:
            geo_y = st.text_input(label="‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÅ‡∏Å‡∏ô Y")
        with col_right:
            geo_z = st.text_input(label="‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÅ‡∏Å‡∏ô Z")
        land_privileges = st.text_input(label="‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô")
        soil_analysis = st.checkbox("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß", value=False)
        water_analysis = st.checkbox("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡πâ‡∏ß", value=False)
        gap_analysis = st.checkbox("‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö GAP ‡πÅ‡∏•‡πâ‡∏ß", value=False)
        st.markdown("""---""")
        col1, col_center, col3 = st.columns([2,1,2])
        with col_center:
            submit_button_clicked = st.form_submit_button(label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        if submit_button_clicked:
            farm_tb_insert(vil_name, district_name, vil_no, subdistrict_name, province_name, geo_x, geo_y, geo_z,
                            land_privileges, soil_analysis, water_analysis, gap_analysis,created_at,updated_at)
            st.success("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

def update_page():
        st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà")
        updated_at = timestamp()
        update_page_options = farm_tb_select()
        farm_selected = st.selectbox("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", options=update_page_options,
                                     format_func=lambda update_page_options: "‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà {} ‡∏ï‡∏≥‡∏ö‡∏•{} ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠{} ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î{}".format(update_page_options[0],update_page_options[1],update_page_options[2],update_page_options[3]))
        st.write(farm_selected)
        col_left, col_right = st.columns([1,1])
        with col_left:
            vil_no = st.text_input(label="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏π‡πà", max_chars=2)
            subdistrict_name = st.text_input(label="‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡∏ö‡∏•")
            province_name = st.text_input(label="‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î")
        with col_right:
            vil_name = st.text_input(label="‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô")
            district_name = st.text_input(label="‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≥‡πÄ‡∏†‡∏≠")
        st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥")
        col_left,col_center,col_right = st.columns([1,1,1])
        with col_left:
            geo_x = st.text_input(label="‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÅ‡∏Å‡∏ô X")
        with col_center:
            geo_y = st.text_input(label="‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÅ‡∏Å‡∏ô Y")
        with col_right:
            geo_z = st.text_input(label="‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÅ‡∏Å‡∏ô Z")
        land_privileges = st.text_input(label="‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô")
        soil_analysis = st.checkbox("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß", value=False)
        water_analysis = st.checkbox("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡πâ‡∏ß", value=False)
        gap_analysis = st.checkbox("‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö GAP ‡πÅ‡∏•‡πâ‡∏ß", value=False)
        st.markdown("""---""")
        col_left, col2, col3, col_right, col5 = st.columns([1, 1, 1, 1, 1])
        with col_right:
            edit_button_clicked = st.button(label="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        with col_right:
            delete_button_clicked = st.button(label="‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        if edit_button_clicked:
            st.success("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
        if delete_button_clicked:
            st.error("‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            pyautogui.hotkey("ctrl", "F5")

def select_page():
    a = [1, "6", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô1", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡∏ö‡∏•1", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≥‡πÄ‡∏†‡∏≠1", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î1", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô1", True, True, False]
    b = [2, "2", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô2", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡∏ö‡∏•2", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≥‡πÄ‡∏†‡∏≠2", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î2", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô2", True, True, False]
    data = (a, b)
    #st.write(a)
    n = 1
    for i in data:
        col_left, col_right, col3 = st.columns([1, 2, 2])
        with col_left:
            st.title("{}. {:03d}".format(n, i[0]))
        with col_right:
            st.caption("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏õ‡∏•‡∏á")
            st.text("‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà {}".format(i[1]))
            st.text("‡∏ï‡∏≥‡∏ö‡∏•: {}".format(i[3]))
            st.text("‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î: {}".format(i[5]))
            st.caption("‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥")
            st.text("‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô: ")
            st.text("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß: ")
            st.text("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡πâ‡∏ß: ")
            st.text("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö GAP ‡πÅ‡∏•‡πâ‡∏ß: ")
        with col3:
            st.caption(".")
            st.text("‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô: {}".format(i[2]))
            st.text("‡∏≠‡∏≥‡πÄ‡∏†‡∏≠: {}".format(i[4]))
            st.caption(".")
            st.caption(".")
            st.text(i[6])
            if i[7] == True:
                st.text("‡∏ï‡∏£‡∏ß‡∏à‡πÅ‡∏•‡πâ‡∏ß")
            else: st.text("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏£‡∏ß‡∏à")
            if i[8] == True:
                st.text("‡∏ï‡∏£‡∏ß‡∏à‡πÅ‡∏•‡πâ‡∏ß")
            else: st.text("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏£‡∏ß‡∏à")
            if i[9] == True:
                st.text("‡∏ï‡∏£‡∏ß‡∏à‡πÅ‡∏•‡πâ‡∏ß")
            else: st.text("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏£‡∏ß‡∏à")
        st.markdown("""---""")
        n += 1

main()